<!DOCTYPE html>
<html>
<head>
  <title>DOE Fuel App</title>
  <%= stylesheet_link_tag    "application", :media => "all" %>
  <%= csrf_meta_tags %>
</head>
<body style="background-color: #3498DB;">

	<div class="navbar navbar-fixed-top">
		<div class="navbar-inner">
			<div class="container">
				<div class="pull-left">
					<a href="/" class="brand">DOE Fuel App</a>
				</div>
				<ul class="nav">
					<li>
						<a href="/prices">Prices</a>
						<ul>
							<li><a href="/prices">Prices</a></li>
							<li><a href="/prices/trends">Trends</a></li>
							<li><a href="/prices/weekly_updates">Weekly Update Emails</a></li>
							<li><a href="/prices/api">API</a></li>
						</ul>
					</li>
					<li><a href="/about">About</a></li>
				</ul>
			</div>
		</div>
	</div>
	<div style="margin-top: 45px;"></div>
	<%= yield %>
	<%= javascript_include_tag "application" %>
	<script type="text/javascript">
		$(document).ready(function() {
			$('.datepicker').datepicker({
		      showOtherMonths: true,
		      selectOtherMonths: true,
		      dateFormat: "yy-mm-dd",
		      yearRange: '-1:+1'
		    }).prev('.btn').on('click', function (e) {
		      e && e.preventDefault();
		      $('.datepicker').focus();
		    });
		    $('.datepicker').datepicker('widget').css({'margin-left': -$('.datepicker').prev('.btn').outerWidth() - 2});
		    $('.datepicker').change(function() {
		    	window.location = "/prices?date=" + $('#datepicker').val();
		    })
		});
		$(document).ready(function() {
			if($("#region_graph_reg").length != 0) {
				$('#region_graph_reg').highcharts({
		            title: {
		                text: 'Fuel Price Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.effective_date.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Price ($)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'US National Average',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.us_national_average.nil? ? 0.0 : x.us_national_average }.to_s %>
		            }, {
		                name: 'East Coast',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.east_coast.nil? ? 0.0 : x.east_coast }.to_s %>
		            }, {
		                name: 'New England',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.new_england.nil? ? 0.0 : x.new_england }.to_s %>
		            }, {
		                name: 'Central Atlantic',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.central_atlantic.nil? ? 0.0 : x.central_atlantic }.to_s %>
		            }, {
		                name: 'Lower Atlantic',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.lower_atlantic.nil? ? 0.0 : x.lower_atlantic }.to_s %>
		            }, {
		                name: 'Midwest',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.midwest.nil? ? 0.0 : x.midwest }.to_s %>
		            }, {
		                name: 'Gulf Coast',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.gulf_coast.nil? ? 0.0 : x.gulf_coast }.to_s %>
		            }, {
		                name: 'Rocky Mountains',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.rocky_mountains.nil? ? 0.0 : x.rocky_mountains }.to_s %>
		            }, {
		                name: 'West Coast',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.west_coast.nil? ? 0.0 : x.west_coast }.to_s %>
		            }, {
		                name: 'California',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.california.nil? ? 0.0 : x.california }.to_s %>
		            }]
		        });
			}
			if($("#state_graph_reg").length != 0) {
				$('#state_graph_reg').highcharts({
		            title: {
		                text: 'Fuel Price Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.effective_date.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Price ($)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'Colorado',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.us_national_average.nil? ? 0.0 : x.us_national_average }.to_s %>
		            }, {
		                name: 'Florida',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.east_coast.nil? ? 0.0 : x.east_coast }.to_s %>
		            }, {
		                name: 'Massachusetts',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.new_england.nil? ? 0.0 : x.new_england }.to_s %>
		            }, {
		                name: 'Minnesota',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.central_atlantic.nil? ? 0.0 : x.central_atlantic }.to_s %>
		            }, {
		                name: 'New York',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.lower_atlantic.nil? ? 0.0 : x.lower_atlantic }.to_s %>
		            }, {
		                name: 'Ohio',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.midwest.nil? ? 0.0 : x.midwest }.to_s %>
		            }, {
		                name: 'Texas',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.gulf_coast.nil? ? 0.0 : x.gulf_coast }.to_s %>
		            }, {
		                name: 'Washington',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.rocky_mountains.nil? ? 0.0 : x.rocky_mountains }.to_s %>
		            }]
		        });
			}
			if($("#city_graph_reg").length != 0) {
				$('#city_graph_reg').highcharts({
		            title: {
		                text: 'Fuel Price Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.effective_date.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Price ($)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'Boston',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.boston.nil? ? 0.0 : x.boston }.to_s %>
		            }, {
		                name: 'Chicago',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.chicago.nil? ? 0.0 : x.chicago }.to_s %>
		            }, {
		                name: 'Cleveland',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.cleveland.nil? ? 0.0 : x.cleveland }.to_s %>
		            }, {
		                name: 'Denver',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.denver.nil? ? 0.0 : x.denver }.to_s %>
		            }, {
		                name: 'Houston',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.houston.nil? ? 0.0 : x.houston }.to_s %>
		            }, {
		                name: 'Los Angeles',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.los_angeles.nil? ? 0.0 : x.los_angeles }.to_s %>
		            }, {
		                name: 'Miami',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.miami.nil? ? 0.0 : x.miami }.to_s %>
		            }, {
		                name: 'New York City',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.new_york_city.nil? ? 0.0 : x.new_york_city }.to_s %>
		            }, {
		                name: 'San Francisco',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.san_francisco.nil? ? 0.0 : x.san_francisco }.to_s %>
		            }, {
		                name: 'Seattle',
		                data: <%= raw RegularPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.seattle.nil? ? 0.0 : x.seattle }.to_s %>
		            }]
		        });
			}
			if($("#region_graph_die").length != 0) {
				$('#region_graph_die').highcharts({
		            title: {
		                text: 'Fuel Price Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.effective_date.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Price ($)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'US National Average',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.us_national_average.nil? ? 0.0 : x.us_national_average }.to_s %>
		            }, {
		                name: 'East Coast',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.east_coast.nil? ? 0.0 : x.east_coast }.to_s %>
		            }, {
		                name: 'New England',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.new_england.nil? ? 0.0 : x.new_england }.to_s %>
		            }, {
		                name: 'Central Atlantic',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.central_atlantic.nil? ? 0.0 : x.central_atlantic }.to_s %>
		            }, {
		                name: 'Lower Atlantic',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.lower_atlantic.nil? ? 0.0 : x.lower_atlantic }.to_s %>
		            }, {
		                name: 'Midwest',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.midwest.nil? ? 0.0 : x.midwest }.to_s %>
		            }, {
		                name: 'Gulf Coast',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.gulf_coast.nil? ? 0.0 : x.gulf_coast }.to_s %>
		            }, {
		                name: 'Rocky Mountains',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.rocky_mountains.nil? ? 0.0 : x.rocky_mountains }.to_s %>
		            }, {
		                name: 'West Coast',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.west_coast.nil? ? 0.0 : x.west_coast }.to_s %>
		            }, {
		                name: 'California',
		                data: <%= raw DieselPrice.find(:all, :order => "effective_date desc", :limit => 12).reverse.collect { |x| x.california.nil? ? 0.0 : x.california }.to_s %>
		            }]
		        });
			}
			if($("#page_view_graph").length != 0) {
				$('#page_view_graph').highcharts({
		            title: {
		                text: 'Page View Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw Stat.select("distinct date(created_at) as created_at").where("message = 'page_view'").collect { |x| x.created_at.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Hits (#)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'Home - Index',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "home", action: "index", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'About - Index',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "about", action: "index", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'Prices - Index',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "index", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'Prices - Trends',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "trends", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'Prices - Weekly Updates',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "weekly_updates", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'Prices - API',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "api", message: "page_view"}).collect { |x| x.count }.to_s %>
		            }]
		        });
			}
			if($("#api_graph").length != 0) {
				$('#api_graph').highcharts({
		            title: {
		                text: 'API Trends',
		                x: -20 //center
		            },
		            xAxis: {
		                categories: <%= raw Stat.select("distinct date(created_at) as created_at").where("message = 'page_view'").collect { |x| x.created_at.to_s }.to_s %>
		            },
		            yAxis: {
		                title: {
		                    text: 'Hits (#)'
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 1,
		                    color: '#808080'
		                }]
		            },
		            legend: {
		                layout: 'vertical',
		                align: 'right',
		                verticalAlign: 'middle',
		                borderWidth: 0
		            },
		            series: [{
		                name: 'XML',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "get", message: "api_xml"}).collect { |x| x.count }.to_s %>
		            }, {
		                name: 'JSON',
		                data: <%= raw Stat.order("created_at").select("count, date(created_at) as created_at").where("controller = :controller and action = :action and message = :message", {controller: "prices", action: "get", message: "api_json"}).collect { |x| x.count }.to_s %>
		            }]
		        });
			}
		});
	</script>
</body>
</html>
